from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import pandas as pd
from datetime import datetime

TOKEN = "7030080230:AAGL4Z2X_92vjurQyMjGZPnlmC-kwJkRFr8"
EXCEL_PATH = r"C:\Users\Modern 14\Desktop\ProjectTelegrammForMM.xlsx"


async def handle_region_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip().lower()

    try:
        df = pd.read_excel(EXCEL_PATH)


        df['–†–µ–≥–∏–æ–Ω_clean'] = df['–†–µ–≥–∏–æ–Ω'].astype(str).str.strip().str.lower()
        region_name = update.message.text.strip().title()
        region_df = df[df['–†–µ–≥–∏–æ–Ω_clean'] == user_input]

        if region_df.empty:
            await update.message.reply_text(f"‚ùå –î–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ–≥–∏–æ–Ω—É '{update.message.text}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        else:
            message = f"üìä *–ü—Ä–æ–¥–∞–∂–∏ –ø–æ {region_name} –Ω–∞ –°–µ–≥–æ–¥–Ω—è  :*\n\n"

            for _, row in region_df.iterrows():

                if isinstance(row['–î–∞—Ç–∞'], datetime):
                    date_str = row['–î–∞—Ç–∞'].strftime('%Y-%m-%d')
                else:
                    try:
                        parsed_date = pd.to_datetime(row['–î–∞—Ç–∞'])
                        date_str = parsed_date.strftime('%Y-%m-%d')
                    except:
                        date_str = "‚Äî"

                message += (
                    f"üìÖ –î–∞—Ç–∞: {date_str}\n\n"
                    f"üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä: {row['–ú–∞—Ä–∫–µ—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä']}\n"
                    f"üí∞ –ü—Ä–æ–¥–∞–∂–∏: ${row['–ü—Ä–æ–¥–∞–∂–∏']:,}\n"
                    f"üìà Percentage of sales from yesterday to today: {round(row['–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–¥–∞–∂'] * 100, 1)}%\n"
                    f"‚úÖ –°—Ç–∞—Ç—É—Å: {row['–°—Ç–∞—Ç—É—Å']}\n"
                )
            await update.message.reply_text(message, parse_mode='Markdown')

    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞.")
        print("–û—à–∏–±–∫–∞:", e)


app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_region_request))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
app.run_polling()
